version: '3'
services:
  grafana:
    container_name: chulachana-grafana
    image: 'grafana/grafana'
    ports:
      - 80:3000
    volumes:
      - ./volumes/grafana:/var/lib/grafana
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.grafana.entrypoints=websecure'
      - 'traefik.http.routers.grafana.rule=Host(`mon.cucheck.in`)'
      - 'traefik.http.routers.grafana.tls=true'
      - 'traefik.http.routers.grafana.tls.certresolver=myhttpchallenge'
  influxdb:
    container_name: chulachana-influxdb
    image: quay.io/influxdb/influxdb:2.0.0-rc
    env_file:
      - .env
    environment:
      TZ: Asia/Bangkok
    ports:
      - 8086:8086
    volumes:
      - ./volumes/influxdb:/var/lib/influxdb2
    command: bash -c 'influxd run --bolt-path /var/lib/influxdb2/influxd.bolt --engine-path /var/lib/influxdb2/engine --store bolt'
  traefik:
    image: traefik:v2.3
    command: --api.insecure=true --providers.docker
    ports:
      - '80:80'
      - '8080:8080'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
#
# Please run the following line after docker-compose up in a new terminal
# docker exec -it chulachana-influxdb bash -c 'influx setup -b $DB_INIT_BUCKET -f -o $DB_ORG -p $DB_PASSWORD -u $DB_USERNAME -t $DB_TOKEN'
#
# And then if any more bucket is needed to be added other than $DB_INIT_BUCKET, please run the following line
# docker exec -it chulachana-influxdb bash -c 'influx bucket create -o $DB_ORG -n ${DB_BUCKET_PREFIX}"001" -t $DB_TOKEN'
# 001 could be any eventID for API to access
#
# (Optional, depending on each event meta-data)
# Finally insert event meta-data for the created eventid by either executing into the container or using InfluxDB GUI
# docker exec -it chulachana-influxdb bash
# influx write -o $DB_ORG -b ${DB_BUCKET_PREFIX}"001" -p ns -t $DB_TOKEN 'info name="ลอยกระทงจุฬาฯ 63",primary-color="FFFFFF",secondary-color="000000"'
