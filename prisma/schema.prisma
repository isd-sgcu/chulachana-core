// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Event {
  id String @id

  name           String
  primaryColor   String
  secondaryColor String

  roles         Role[]
  entries       Entry[]
  currentUsers  UserInEvent[]
  userCountLogs UserCountLog[]
}

model Role {
  id      Int    @id @default(autoincrement())
  event   Event  @relation(fields: [eventId], references: [id])
  eventId String

  slug          String
  name          String
  entries       Entry[]
  currentEvents UserInEvent[]
  userCountLogs UserCountLog[]
}

model User {
  id Int @id @default(autoincrement())

  phone   String  @unique
  name    String
  faculty String?
  year    Year?

  entries       Entry[]
  currentEvents UserInEvent[]
}

model UserInEvent {
  user    User   @relation(fields: [userId], references: [id])
  userId  Int
  event   Event  @relation(fields: [eventId], references: [id])
  eventId String
  role    Role   @relation(fields: [roleId], references: [id])
  roleId  Int

  @@id([userId, eventId])
}

model Entry {
  id      Int    @id @default(autoincrement())
  userId  Int
  user    User   @relation(fields: [userId], references: [id])
  eventId String
  event   Event  @relation(fields: [eventId], references: [id])
  roleId  Int
  role    Role   @relation(fields: [roleId], references: [id])

  timestamp DateTime  @default(now())
  type      EntryType
}

model UserCountLog {
  id      Int    @id @default(autoincrement())
  event   Event  @relation(fields: [eventId], references: [id])
  eventId String
  role    Role   @relation(fields: [roleId], references: [id])
  roleId  Int

  timestamp DateTime @default(now())
  count     Int
}

enum EntryType {
  IN
  OUT
}

enum Year {
  Y1
  Y2
  Y3
  Y4
  Y5
  Y6
  Y7
  Y8
  MASTER
  PHD
}
